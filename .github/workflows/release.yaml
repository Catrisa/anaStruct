name: Release

on:
  # push:
  #    # Sequence of patterns matched against refs/tags
  #   tags:
  #     - 'release-v*' # Push events to matching release-v*, i.e. release-v1.0, release-v20.15.10
  release:
    types: [published, edited]
jobs:
  build_sdist:
    name: Build Source Distribution
    runs-on: "ubuntu-latest"
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install .[dev,test]
          pip install build
      - name: Build Source Distribution
        run: python -m build --sdist --outdir dist/ .
      - uses: actions/upload-artifact@v4
        with:
          name: anastruct-sdist-${{ strategy.job-index }}

  build_wheels:
    name: Build wheels on ${{ matrix.python }}-${{ matrix.os }} 
    needs: build_sdist
    runs-on: ${{ matrix.buildplat[0] }}
    strategy:
      matrix:
        buildplat:
          - [ubuntu-latest, manylinux_x86_64]
          - [ubuntu-latest, musllinux_x86_64]
          - [macos-13, macosx_x86_64]
          - [macos-14, macosx_arm64]
          - [windows-latest, win_amd64]
        python: ["cp310", "cp311", "cp312"]

    steps:
      - uses: pypa/cibuildwheel@v2.19.1
      - name: Build wheels
        run: python -m cibuildwheel --output-dir dist
        env:
          CIBW_BUILD: "{{ matrix.python }}-${{ matrix.buildplat[1] }}"
          CIBW_TEST_EXTRAS: "test"
          CIBW_TEST_COMMAND: "python -m pytest --pspec anastruct/tests"
        
      - uses: actions/upload-artifact@v4
        with:
          name: anastruct-${{ matrix.python }}-${{ matrix.buildplat[1] }}
          path: ./wheelhouse/*.whl

  run_tests:
    name: Fully Test Release Package with Release Dependencies
    needs: build_sdist
    runs-on: "ubuntu-latest"
    strategy:
      matrix:
        python-version: ["3.9"]
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install .[dev,test]
      - name: Run linting check with pylint
        run: |
          pylint ./anastruct
      - name: Run formatting checks with black
        run: |
          black --check .
      - name: Run type checks with mypy
        run: |
          mypy
      - name: Run FEM tests with pytest
        run: |
          python -m pytest --pspec tests/
  publish:
    name: Publish to PyPI
    runs-on: "ubuntu-latest"
    steps:
      - name: Publish to pypi
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_PASS }}
